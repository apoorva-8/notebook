import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
%matplotlib inline
import seaborn as sns
#IMPORTING DATA
data = pd.read_csv('TASK1.csv')
data
sns.regplot(data=data, x='Hours', y='scores',ci=None)
plt.xlabel('Hours/day')
plt.ylabel('Scores')
plt.show
data.corr()
x= data['Hours'].values.reshape(-1,1)
y=data['scores'].values.reshape(-1,1)
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y, test_size=0.2, random_state=42)
from sklearn.linear_model import LinearRegression
model = LinearRegression()
model.fit(x_train, y_train)
print('Model Trained')
y_pred = model.predict(x_test)
y_test.shape
df = pd.DataFrame({'Actual':y_test.flatten(), 'Predicted':y_pred.flatten()})
df
hours= np.array(9.25).reshape(-1,1)
predicted = model.predict(hours)
print(f'''
No of Hours:{hours.flatten()[0]}
Marks predicted:{predicted.flatten()[0]}''')
from sklearn.metrics import mean_squared_error
print("R^2:{}",format(model.score(x_test,y_test)))
rmse= np.sqrt(mean_squared_error(y_test,y_pred))
print("Root mean Squared Error:{}".format(rmse))
